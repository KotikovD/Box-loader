//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity characterServiceEntity { get { return GetGroup(GameMatcher.CharacterService).GetSingleEntity(); } }
    public CharacterServiceComponent characterService { get { return characterServiceEntity.characterService; } }
    public bool hasCharacterService { get { return characterServiceEntity != null; } }

    public GameEntity SetCharacterService(BoxLoader.ICharacterService newValue) {
        if (hasCharacterService) {
            throw new Entitas.EntitasException("Could not set CharacterService!\n" + this + " already has an entity with CharacterServiceComponent!",
                "You should check if the context already has a characterServiceEntity before setting it or use context.ReplaceCharacterService().");
        }
        var entity = CreateEntity();
        entity.AddCharacterService(newValue);
        return entity;
    }

    public void ReplaceCharacterService(BoxLoader.ICharacterService newValue) {
        var entity = characterServiceEntity;
        if (entity == null) {
            entity = SetCharacterService(newValue);
        } else {
            entity.ReplaceCharacterService(newValue);
        }
    }

    public void RemoveCharacterService() {
        characterServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CharacterServiceComponent characterService { get { return (CharacterServiceComponent)GetComponent(GameComponentsLookup.CharacterService); } }
    public bool hasCharacterService { get { return HasComponent(GameComponentsLookup.CharacterService); } }

    public void AddCharacterService(BoxLoader.ICharacterService newValue) {
        var index = GameComponentsLookup.CharacterService;
        var component = (CharacterServiceComponent)CreateComponent(index, typeof(CharacterServiceComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCharacterService(BoxLoader.ICharacterService newValue) {
        var index = GameComponentsLookup.CharacterService;
        var component = (CharacterServiceComponent)CreateComponent(index, typeof(CharacterServiceComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCharacterService() {
        RemoveComponent(GameComponentsLookup.CharacterService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCharacterService;

    public static Entitas.IMatcher<GameEntity> CharacterService {
        get {
            if (_matcherCharacterService == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CharacterService);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCharacterService = matcher;
            }

            return _matcherCharacterService;
        }
    }
}
