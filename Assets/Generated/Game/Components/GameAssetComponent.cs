//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BoxLoader.AssetComponent asset { get { return (BoxLoader.AssetComponent)GetComponent(GameComponentsLookup.Asset); } }
    public bool hasAsset { get { return HasComponent(GameComponentsLookup.Asset); } }

    public void AddAsset(string newAsset, BoxLoader.SceneTagNames newParentTag) {
        var index = GameComponentsLookup.Asset;
        var component = (BoxLoader.AssetComponent)CreateComponent(index, typeof(BoxLoader.AssetComponent));
        component.Asset = newAsset;
        component.ParentTag = newParentTag;
        AddComponent(index, component);
    }

    public void ReplaceAsset(string newAsset, BoxLoader.SceneTagNames newParentTag) {
        var index = GameComponentsLookup.Asset;
        var component = (BoxLoader.AssetComponent)CreateComponent(index, typeof(BoxLoader.AssetComponent));
        component.Asset = newAsset;
        component.ParentTag = newParentTag;
        ReplaceComponent(index, component);
    }

    public void RemoveAsset() {
        RemoveComponent(GameComponentsLookup.Asset);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAsset;

    public static Entitas.IMatcher<GameEntity> Asset {
        get {
            if (_matcherAsset == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Asset);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAsset = matcher;
            }

            return _matcherAsset;
        }
    }
}
